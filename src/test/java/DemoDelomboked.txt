/*
E:\Java\projects\advanced erp\ERPv1\src\test\java>set path="c:\Program Files\Java\jdk1.8.0_181\bin" 

E:\Java\projects\advanced erp\ERPv1\src\test\java>java -jar lombok.jar delombok -p Demo.java 
// Generated by delombok at Sat Apr 27 22:27:38 IST 2019
*/
import java.math.BigDecimal;
import java.sql.Date;
import java.util.Set;
import lombok.NonNull;

class Demo {
	private int id;
	@NonNull
	private String name;
	//private BigDecimal marks= new BigDecimal("0");
	@NonNull
	private BigDecimal marks;
	//private Set<String> set= new HashSet<>();
	@NonNull
	private Set<String> set;
	@NonNull
	private Date date;
	@NonNull
	private Temp temp;

	@java.lang.SuppressWarnings("all")
	public int getId() {
		return this.id;
	}

	@NonNull
	@java.lang.SuppressWarnings("all")
	public String getName() {
		return this.name;
	}

	@NonNull
	@java.lang.SuppressWarnings("all")
	public BigDecimal getMarks() {
		return this.marks;
	}

	@NonNull
	@java.lang.SuppressWarnings("all")
	public Set<String> getSet() {
		return this.set;
	}

	@NonNull
	@java.lang.SuppressWarnings("all")
	public Date getDate() {
		return this.date;
	}

	@NonNull
	@java.lang.SuppressWarnings("all")
	public Temp getTemp() {
		return this.temp;
	}

	@java.lang.SuppressWarnings("all")
	public void setId(final int id) {
		this.id = id;
	}

	@java.lang.SuppressWarnings("all")
	public void setName(@NonNull final String name) {
		if (name == null) {
			throw new java.lang.NullPointerException("name is marked @NonNull but is null");
		}
		this.name = name;
	}

	@java.lang.SuppressWarnings("all")
	public void setMarks(@NonNull final BigDecimal marks) {
		if (marks == null) {
			throw new java.lang.NullPointerException("marks is marked @NonNull but is null");
		}
		this.marks = marks;
	}

	@java.lang.SuppressWarnings("all")
	public void setSet(@NonNull final Set<String> set) {
		if (set == null) {
			throw new java.lang.NullPointerException("set is marked @NonNull but is null");
		}
		this.set = set;
	}

	@java.lang.SuppressWarnings("all")
	public void setDate(@NonNull final Date date) {
		if (date == null) {
			throw new java.lang.NullPointerException("date is marked @NonNull but is null");
		}
		this.date = date;
	}

	@java.lang.SuppressWarnings("all")
	public void setTemp(@NonNull final Temp temp) {
		if (temp == null) {
			throw new java.lang.NullPointerException("temp is marked @NonNull but is null");
		}
		this.temp = temp;
	}

	@java.lang.SuppressWarnings("all")
	public Demo() {
	}

	@java.lang.SuppressWarnings("all")
	public Demo(final int id, @NonNull final String name, @NonNull final BigDecimal marks, @NonNull final Set<String> set, @NonNull final Date date, @NonNull final Temp temp) {
		if (name == null) {
			throw new java.lang.NullPointerException("name is marked @NonNull but is null");
		}
		if (marks == null) {
			throw new java.lang.NullPointerException("marks is marked @NonNull but is null");
		}
		if (set == null) {
			throw new java.lang.NullPointerException("set is marked @NonNull but is null");
		}
		if (date == null) {
			throw new java.lang.NullPointerException("date is marked @NonNull but is null");
		}
		if (temp == null) {
			throw new java.lang.NullPointerException("temp is marked @NonNull but is null");
		}
		this.id = id;
		this.name = name;
		this.marks = marks;
		this.set = set;
		this.date = date;
		this.temp = temp;
	}

	@java.lang.SuppressWarnings("all")
	public Demo(@NonNull final String name, @NonNull final BigDecimal marks, @NonNull final Set<String> set, @NonNull final Date date, @NonNull final Temp temp) {
		if (name == null) {
			throw new java.lang.NullPointerException("name is marked @NonNull but is null");
		}
		if (marks == null) {
			throw new java.lang.NullPointerException("marks is marked @NonNull but is null");
		}
		if (set == null) {
			throw new java.lang.NullPointerException("set is marked @NonNull but is null");
		}
		if (date == null) {
			throw new java.lang.NullPointerException("date is marked @NonNull but is null");
		}
		if (temp == null) {
			throw new java.lang.NullPointerException("temp is marked @NonNull but is null");
		}
		this.name = name;
		this.marks = marks;
		this.set = set;
		this.date = date;
		this.temp = temp;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "Demo(id=" + this.getId() + ", name=" + this.getName() + ", marks=" + this.getMarks() + ", set=" + this.getSet() + ", date=" + this.getDate() + ", temp=" + this.getTemp() + ")";
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof Demo)) return false;
		final Demo other = (Demo) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (this.getId() != other.getId()) return false;
		final java.lang.Object this$name = this.getName();
		final java.lang.Object other$name = other.getName();
		if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
		final java.lang.Object this$marks = this.getMarks();
		final java.lang.Object other$marks = other.getMarks();
		if (this$marks == null ? other$marks != null : !this$marks.equals(other$marks)) return false;
		final java.lang.Object this$set = this.getSet();
		final java.lang.Object other$set = other.getSet();
		if (this$set == null ? other$set != null : !this$set.equals(other$set)) return false;
		final java.lang.Object this$date = this.getDate();
		final java.lang.Object other$date = other.getDate();
		if (this$date == null ? other$date != null : !this$date.equals(other$date)) return false;
		final java.lang.Object this$temp = this.getTemp();
		final java.lang.Object other$temp = other.getTemp();
		if (this$temp == null ? other$temp != null : !this$temp.equals(other$temp)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof Demo;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + this.getId();
		final java.lang.Object $name = this.getName();
		result = result * PRIME + ($name == null ? 43 : $name.hashCode());
		final java.lang.Object $marks = this.getMarks();
		result = result * PRIME + ($marks == null ? 43 : $marks.hashCode());
		final java.lang.Object $set = this.getSet();
		result = result * PRIME + ($set == null ? 43 : $set.hashCode());
		final java.lang.Object $date = this.getDate();
		result = result * PRIME + ($date == null ? 43 : $date.hashCode());
		final java.lang.Object $temp = this.getTemp();
		result = result * PRIME + ($temp == null ? 43 : $temp.hashCode());
		return result;
	}
}

class Temp {
}
